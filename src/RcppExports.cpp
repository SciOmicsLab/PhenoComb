// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// group_and_reduce_phenotypes
IntegerMatrix group_and_reduce_phenotypes(IntegerMatrix phenotypes, IntegerVector markers_to_drop);
RcppExport SEXP _PhenoComb_group_and_reduce_phenotypes(SEXP phenotypesSEXP, SEXP markers_to_dropSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< IntegerMatrix >::type phenotypes(phenotypesSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type markers_to_drop(markers_to_dropSEXP);
    rcpp_result_gen = Rcpp::wrap(group_and_reduce_phenotypes(phenotypes, markers_to_drop));
    return rcpp_result_gen;
END_RCPP
}
// make_phenotype_name
String make_phenotype_name(IntegerVector phenotype, CharacterVector markers);
RcppExport SEXP _PhenoComb_make_phenotype_name(SEXP phenotypeSEXP, SEXP markersSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< IntegerVector >::type phenotype(phenotypeSEXP);
    Rcpp::traits::input_parameter< CharacterVector >::type markers(markersSEXP);
    rcpp_result_gen = Rcpp::wrap(make_phenotype_name(phenotype, markers));
    return rcpp_result_gen;
END_RCPP
}
// count_markers
int count_markers(IntegerVector phenotype);
RcppExport SEXP _PhenoComb_count_markers(SEXP phenotypeSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< IntegerVector >::type phenotype(phenotypeSEXP);
    rcpp_result_gen = Rcpp::wrap(count_markers(phenotype));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_PhenoComb_group_and_reduce_phenotypes", (DL_FUNC) &_PhenoComb_group_and_reduce_phenotypes, 2},
    {"_PhenoComb_make_phenotype_name", (DL_FUNC) &_PhenoComb_make_phenotype_name, 2},
    {"_PhenoComb_count_markers", (DL_FUNC) &_PhenoComb_count_markers, 1},
    {NULL, NULL, 0}
};

RcppExport void R_init_PhenoComb(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
