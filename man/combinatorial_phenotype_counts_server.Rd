% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/combinatorial_phenotypes_generation_server.R
\name{combinatorial_phenotype_counts_server}
\alias{combinatorial_phenotype_counts_server}
\title{Count cells for each phenotype for each sample (Server Version)}
\usage{
combinatorial_phenotype_counts_server(
  cell_file,
  channel_file,
  sample_file,
  output_folder,
  parent_phen = NULL,
  min_count = 10,
  sample_fraction_min_counts = 0,
  max_phenotype_length = 0,
  sampleID_col = "Sample_ID",
  save_cell_data = TRUE,
  continue = TRUE,
  max_ram = 0,
  efficient = TRUE,
  n_threads = 1,
  verbose = TRUE
)
}
\arguments{
\item{cell_file}{Path to file containing cell data. Must be a ".csv" or ".fcs" file.}

\item{channel_file}{Path to a ".csv" file containing columns named: Channel, Marker, T1, [T2, T3, ... , Tn], [OOB].}

\item{sample_file}{Path to a ".csv" file containing a Sample_ID column and additional grouping columns for the samples.}

\item{output_folder}{Path to folder where outputs and temporary files should be saved.}

\item{parent_phen}{Parent phenotype to filter for. All phenotypes generated will contain the parent phenotype.}

\item{min_count}{Minimum number of cells that a phenotype must have for at least one sample.}

\item{sample_fraction_min_counts}{Fraction of samples that must have at least \code{min_count} cells. Value forced to minimum of 1/n_samples.}

\item{max_phenotype_length}{Maximum length of markers to compose a phenotype.}

\item{save_cell_data}{If TRUE, processed cell data is saved to "output_folder/cell_data.csv".}

\item{continue}{If TRUE, look for files to resume execution. Also needed to save necessary "continuing" files.}

\item{max_ram}{Maximum ram memory in Gb to be used by the function.}

\item{efficient}{If TRUE, filter full-length phenotypes for \code{min_count} condition before generating all marker combinations.
It is less sensitive for very rare phenotypes but yields a great boost in performance.}

\item{n_threads}{Number of threads to be used. Default: 1.}

\item{verbose}{If TRUE, print outputs from log to stdout.}

\item{sample_ID_col}{Name of the column in \code{cell_data} where the Sample IDs are stored. Default: "Sample_ID".}
}
\value{
Output is saved to file.
}
\description{
\code{combinatorial_phenotype_counts_server} generates phenotypes considering all
possible combination of markers and count the number of cells for each phenotype
for each sample.
}
\details{
This server version does all the process from raw cell data, channel data, and
sample data writing the results to a file. It is intended to be used with large datasets
which outputs wouldn't fit in the available memory. It divides all the possible
marker combinations into smaller chunks and compute them separatedly saving results
to the output file called "combinatorial_phenotype_counts.csv".
}
